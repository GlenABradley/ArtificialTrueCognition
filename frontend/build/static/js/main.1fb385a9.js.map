{"version":3,"file":"static/js/main.1fb385a9.js","mappings":"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","sources":["App.js","index.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nconst API = `${BACKEND_URL}/api`;\n\nconst TrainingInterface = () => {\n  const [trainingPairs, setTrainingPairs] = useState([]);\n  const [newPair, setNewPair] = useState({ query: \"\", response: \"\", quality_score: 0.8 });\n  const [isTraining, setIsTraining] = useState(false);\n  const [trainingConfig, setTrainingConfig] = useState({\n    epochs: 10,\n    batch_size: 16,\n    learning_rate: 0.0001\n  });\n\n  const loadTrainingData = async () => {\n    try {\n      const result = await axios.get(`${API}/training/data`);\n      setTrainingPairs(result.data.training_pairs || []);\n    } catch (err) {\n      console.error(\"Failed to load training data:\", err);\n    }\n  };\n\n  const addTrainingPair = async () => {\n    if (!newPair.query.trim() || !newPair.response.trim()) return;\n    \n    try {\n      await axios.post(`${API}/training/add-pair`, {\n        query: newPair.query,\n        response: newPair.response,\n        quality_score: newPair.quality_score,\n        coherence_score: 0.8,\n        sememes: []\n      });\n      \n      setNewPair({ query: \"\", response: \"\", quality_score: 0.8 });\n      loadTrainingData();\n    } catch (err) {\n      console.error(\"Failed to add training pair:\", err);\n    }\n  };\n\n  const startTraining = async () => {\n    if (trainingPairs.length === 0) {\n      alert(\"Please add some training pairs first!\");\n      return;\n    }\n    \n    setIsTraining(true);\n    \n    try {\n      const response = await axios.post(`${API}/training/start`, {\n        training_pairs: trainingPairs,\n        epochs: trainingConfig.epochs,\n        batch_size: trainingConfig.batch_size,\n        learning_rate: trainingConfig.learning_rate\n      });\n      \n      alert(response.data.message);\n    } catch (err) {\n      console.error(\"Failed to start training:\", err);\n      alert(\"Training failed to start\");\n    } finally {\n      setIsTraining(false);\n    }\n  };\n\n  const clearTrainingData = async () => {\n    if (confirm(\"Are you sure you want to clear all training data?\")) {\n      try {\n        await axios.delete(`${API}/training/data`);\n        loadTrainingData();\n      } catch (err) {\n        console.error(\"Failed to clear training data:\", err);\n      }\n    }\n  };\n\n  useEffect(() => {\n    loadTrainingData();\n  }, []);\n\n  return (\n    <div className=\"training-interface\">\n      <h2>🎓 Training Interface</h2>\n      \n      {/* Training Configuration */}\n      <div className=\"training-config\">\n        <h3>Training Configuration</h3>\n        <div className=\"config-grid\">\n          <div className=\"config-item\">\n            <label>Epochs:</label>\n            <input\n              type=\"number\"\n              value={trainingConfig.epochs}\n              onChange={(e) => setTrainingConfig({...trainingConfig, epochs: parseInt(e.target.value)})}\n              min=\"1\"\n              max=\"100\"\n            />\n          </div>\n          <div className=\"config-item\">\n            <label>Batch Size:</label>\n            <input\n              type=\"number\"\n              value={trainingConfig.batch_size}\n              onChange={(e) => setTrainingConfig({...trainingConfig, batch_size: parseInt(e.target.value)})}\n              min=\"1\"\n              max=\"64\"\n            />\n          </div>\n          <div className=\"config-item\">\n            <label>Learning Rate:</label>\n            <input\n              type=\"number\"\n              value={trainingConfig.learning_rate}\n              onChange={(e) => setTrainingConfig({...trainingConfig, learning_rate: parseFloat(e.target.value)})}\n              step=\"0.0001\"\n              min=\"0.0001\"\n              max=\"0.01\"\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Add Training Pair */}\n      <div className=\"add-training-pair\">\n        <h3>Add Training Pair</h3>\n        <div className=\"pair-form\">\n          <textarea\n            placeholder=\"Enter query...\"\n            value={newPair.query}\n            onChange={(e) => setNewPair({...newPair, query: e.target.value})}\n            rows={2}\n          />\n          <textarea\n            placeholder=\"Enter expected response...\"\n            value={newPair.response}\n            onChange={(e) => setNewPair({...newPair, response: e.target.value})}\n            rows={3}\n          />\n          <div className=\"quality-score\">\n            <label>Quality Score:</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={newPair.quality_score}\n              onChange={(e) => setNewPair({...newPair, quality_score: parseFloat(e.target.value)})}\n            />\n            <span>{newPair.quality_score.toFixed(1)}</span>\n          </div>\n          <button onClick={addTrainingPair} className=\"add-pair-btn\">\n            Add Training Pair\n          </button>\n        </div>\n      </div>\n\n      {/* Training Data */}\n      <div className=\"training-data\">\n        <div className=\"data-header\">\n          <h3>Training Data ({trainingPairs.length} pairs)</h3>\n          <div className=\"data-actions\">\n            <button onClick={startTraining} disabled={isTraining || trainingPairs.length === 0} className=\"train-btn\">\n              {isTraining ? \"Training...\" : \"Start Training\"}\n            </button>\n            <button onClick={clearTrainingData} className=\"clear-btn\">\n              Clear Data\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"training-pairs-list\">\n          {trainingPairs.map((pair, index) => (\n            <div key={index} className=\"training-pair\">\n              <div className=\"pair-query\">\n                <strong>Q:</strong> {pair.query}\n              </div>\n              <div className=\"pair-response\">\n                <strong>A:</strong> {pair.response}\n              </div>\n              <div className=\"pair-scores\">\n                <span>Quality: {pair.quality_score.toFixed(1)}</span>\n                <span>Coherence: {pair.coherence_score.toFixed(1)}</span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ResponseImprovement = ({ query, currentResponse, onImprove }) => {\n  const [improvedResponse, setImprovedResponse] = useState(\"\");\n  const [isImproving, setIsImproving] = useState(false);\n\n  const improveResponse = async () => {\n    if (!improvedResponse.trim()) return;\n    \n    setIsImproving(true);\n    \n    try {\n      const response = await axios.post(`${API}/training/improve-response`, null, {\n        params: {\n          query: query,\n          current_response: currentResponse,\n          target_response: improvedResponse\n        }\n      });\n      \n      onImprove(response.data);\n      setImprovedResponse(\"\");\n    } catch (err) {\n      console.error(\"Failed to improve response:\", err);\n    } finally {\n      setIsImproving(false);\n    }\n  };\n\n  return (\n    <div className=\"response-improvement\">\n      <h4>💡 Improve This Response</h4>\n      <div className=\"improvement-form\">\n        <textarea\n          placeholder=\"Enter improved response...\"\n          value={improvedResponse}\n          onChange={(e) => setImprovedResponse(e.target.value)}\n          rows={3}\n        />\n        <button onClick={improveResponse} disabled={isImproving} className=\"improve-btn\">\n          {isImproving ? \"Adding...\" : \"Add as Training\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst CognitionInterface = () => {\n  const [query, setQuery] = useState(\"\");\n  const [response, setResponse] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [metrics, setMetrics] = useState(null);\n  const [error, setError] = useState(null);\n  const [showTraining, setShowTraining] = useState(false);\n  const [showImprovement, setShowImprovement] = useState(false);\n\n  // Load initial data\n  useEffect(() => {\n    loadHistory();\n    loadMetrics();\n  }, []);\n\n  const loadHistory = async () => {\n    try {\n      const result = await axios.get(`${API}/cognition/history`);\n      setHistory(result.data);\n    } catch (err) {\n      console.error(\"Failed to load history:\", err);\n    }\n  };\n\n  const loadMetrics = async () => {\n    try {\n      const result = await axios.get(`${API}/cognition/performance`);\n      setMetrics(result.data);\n    } catch (err) {\n      console.error(\"Failed to load metrics:\", err);\n    }\n  };\n\n  const processQuery = async () => {\n    if (!query.trim()) return;\n    \n    setIsProcessing(true);\n    setError(null);\n    \n    try {\n      const result = await axios.post(`${API}/cognition`, { query });\n      setResponse(result.data);\n      setQuery(\"\");\n      \n      // Refresh history and metrics\n      loadHistory();\n      loadMetrics();\n    } catch (err) {\n      setError(err.response?.data?.detail || \"Processing failed\");\n      console.error(\"Cognition processing failed:\", err);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const resetEngine = async () => {\n    try {\n      await axios.post(`${API}/cognition/reset`);\n      setResponse(null);\n      setHistory([]);\n      setMetrics(null);\n      loadMetrics();\n      alert(\"Engine reset successfully!\");\n    } catch (err) {\n      alert(\"Failed to reset engine\");\n    }\n  };\n\n  const handleResponseImprovement = (improvementData) => {\n    alert(\"Response improvement added to training data!\");\n    setShowImprovement(false);\n  };\n\n  const formatTime = (seconds) => {\n    return `${(seconds * 1000).toFixed(1)}ms`;\n  };\n\n  const formatPercentage = (value) => {\n    return `${(value * 100).toFixed(1)}%`;\n  };\n\n  return (\n    <div className=\"cognition-interface\">\n      <div className=\"header\">\n        <h1>🧠 Enhanced SATC Engine</h1>\n        <p className=\"subtitle\">Artificial True Cognition System</p>\n        <div className=\"header-actions\">\n          <button \n            onClick={() => setShowTraining(!showTraining)}\n            className=\"training-toggle-btn\"\n          >\n            {showTraining ? \"Hide Training\" : \"Show Training\"}\n          </button>\n        </div>\n      </div>\n\n      {/* Training Interface */}\n      {showTraining && <TrainingInterface />}\n\n      {/* Query Input */}\n      <div className=\"query-section\">\n        <div className=\"input-group\">\n          <textarea\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Enter your query for the SATC cognition engine...\"\n            className=\"query-input\"\n            rows={3}\n            disabled={isProcessing}\n          />\n          <div className=\"input-actions\">\n            <button \n              onClick={processQuery}\n              disabled={isProcessing || !query.trim()}\n              className=\"process-btn\"\n            >\n              {isProcessing ? \"Processing...\" : \"Process Query\"}\n            </button>\n            <button onClick={resetEngine} className=\"reset-btn\">\n              Reset Engine\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"error-section\">\n          <h3>❌ Error</h3>\n          <p>{error}</p>\n        </div>\n      )}\n\n      {/* Response Display */}\n      {response && (\n        <div className=\"response-section\">\n          <h3>🎯 Response</h3>\n          <div className=\"response-card\">\n            <div className=\"response-header\">\n              <span className={`phase-badge ${response.phase}`}>\n                {response.phase.toUpperCase()}\n              </span>\n              <span className=\"method-badge\">{response.method}</span>\n              <span className=\"time-badge\">{formatTime(response.processing_time)}</span>\n              <button \n                onClick={() => setShowImprovement(!showImprovement)}\n                className=\"improve-toggle-btn\"\n              >\n                💡 Improve\n              </button>\n            </div>\n            \n            <div className=\"response-content\">\n              <p className=\"output\">{response.output}</p>\n            </div>\n            \n            <div className=\"response-metrics\">\n              <div className=\"metric\">\n                <span className=\"metric-label\">Coherence:</span>\n                <span className=\"metric-value coherence\">\n                  {(response.coherence * 100).toFixed(1)}%\n                </span>\n              </div>\n              {response.dissonance && (\n                <div className=\"metric\">\n                  <span className=\"metric-label\">Dissonance:</span>\n                  <span className=\"metric-value dissonance\">\n                    {response.dissonance.toFixed(3)}\n                  </span>\n                </div>\n              )}\n              <div className=\"metric\">\n                <span className=\"metric-label\">Success:</span>\n                <span className={`metric-value ${response.success ? 'success' : 'failure'}`}>\n                  {response.success ? \"✅\" : \"❌\"}\n                </span>\n              </div>\n            </div>\n\n            {response.metadata && (\n              <div className=\"metadata-section\">\n                <h4>Technical Details</h4>\n                <div className=\"metadata-grid\">\n                  <div className=\"metadata-item\">\n                    <span>Nodes:</span>\n                    <span>{response.metadata.nodes_count}</span>\n                  </div>\n                  <div className=\"metadata-item\">\n                    <span>Sememes:</span>\n                    <span>{response.metadata.sememes_count}</span>\n                  </div>\n                  <div className=\"metadata-item\">\n                    <span>Variants:</span>\n                    <span>{response.metadata.variants_count}</span>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Response Improvement */}\n            {showImprovement && (\n              <ResponseImprovement \n                query={response.query}\n                currentResponse={response.output}\n                onImprove={handleResponseImprovement}\n              />\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Performance Metrics */}\n      {metrics && (\n        <div className=\"metrics-section\">\n          <h3>📊 Performance Metrics</h3>\n          <div className=\"metrics-grid\">\n            <div className=\"metric-card\">\n              <div className=\"metric-title\">Total Queries</div>\n              <div className=\"metric-number\">{metrics.total_queries}</div>\n            </div>\n            <div className=\"metric-card\">\n              <div className=\"metric-title\">Recognition Rate</div>\n              <div className=\"metric-number\">{formatPercentage(metrics.recognition_rate)}</div>\n            </div>\n            <div className=\"metric-card\">\n              <div className=\"metric-title\">Avg Coherence</div>\n              <div className=\"metric-number\">{formatPercentage(metrics.avg_coherence)}</div>\n            </div>\n            <div className=\"metric-card\">\n              <div className=\"metric-title\">Avg Processing Time</div>\n              <div className=\"metric-number\">{formatTime(metrics.avg_processing_time)}</div>\n            </div>\n            <div className=\"metric-card\">\n              <div className=\"metric-title\">Memory Updates</div>\n              <div className=\"metric-number\">{metrics.memory_updates}</div>\n            </div>\n            <div className=\"metric-card\">\n              <div className=\"metric-title\">Deposited Patterns</div>\n              <div className=\"metric-number\">{metrics.deposited_patterns}</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* History Section */}\n      {history.length > 0 && (\n        <div className=\"history-section\">\n          <h3>📜 Recent History</h3>\n          <div className=\"history-list\">\n            {history.slice(0, 5).map((item, index) => (\n              <div key={item.id || index} className=\"history-item\">\n                <div className=\"history-header\">\n                  <span className={`phase-badge ${item.phase}`}>\n                    {item.phase.toUpperCase()}\n                  </span>\n                  <span className=\"history-time\">\n                    {formatTime(item.processing_time)}\n                  </span>\n                  <span className=\"history-coherence\">\n                    {(item.coherence * 100).toFixed(1)}%\n                  </span>\n                </div>\n                <div className=\"history-query\">{item.query}</div>\n                <div className=\"history-output\">{item.output}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst Home = () => {\n  const [showCognition, setShowCognition] = useState(false);\n\n  const testBackendConnection = async () => {\n    try {\n      const response = await axios.get(`${API}/`);\n      console.log(\"Backend connection:\", response.data.message);\n    } catch (e) {\n      console.error(\"Backend connection error:\", e);\n    }\n  };\n\n  useEffect(() => {\n    testBackendConnection();\n  }, []);\n\n  if (showCognition) {\n    return <CognitionInterface />;\n  }\n\n  return (\n    <div className=\"home-page\">\n      <header className=\"app-header\">\n        <div className=\"hero-section\">\n          <h1 className=\"hero-title\">🧠 Enhanced SATC</h1>\n          <p className=\"hero-subtitle\">Artificial True Cognition System</p>\n          <p className=\"hero-description\">\n            Revolutionary cognitive architecture that achieves genuine artificial cognition \n            through emergent semantic processing and the Syncopation engine.\n          </p>\n        </div>\n\n        <div className=\"features-section\">\n          <h2>Key Features</h2>\n          <div className=\"features-grid\">\n            <div className=\"feature-card\">\n              <h3>🔄 Syncopation Engine</h3>\n              <p>Multi-dimensional semantic resonance cascades (12D→24D→48D→96D)</p>\n            </div>\n            <div className=\"feature-card\">\n              <h3>⚡ Dual-Phase Processing</h3>\n              <p>Recognition (fast) + Cognition (deliberate) architecture</p>\n            </div>\n            <div className=\"feature-card\">\n              <h3>🎯 Dissonance Balancing</h3>\n              <p>Optimal output generation through beam search and genetic algorithms</p>\n            </div>\n            <div className=\"feature-card\">\n              <h3>🧠 Continual Learning</h3>\n              <p>EWC-based memory integration without catastrophic forgetting</p>\n            </div>\n            <div className=\"feature-card\">\n              <h3>🔬 HD Space Processing</h3>\n              <p>10,000+ dimensional semantic representation</p>\n            </div>\n            <div className=\"feature-card\">\n              <h3>📊 Performance Monitoring</h3>\n              <p>Real-time metrics and coherence tracking</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"cta-section\">\n          <button \n            onClick={() => setShowCognition(true)}\n            className=\"cta-button\"\n          >\n            🚀 Launch SATC Interface\n          </button>\n          <p className=\"cta-description\">\n            Experience true artificial cognition in action\n          </p>\n        </div>\n      </header>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [96], () => (__webpack_require__(785)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["API","concat","process","TrainingInterface","trainingPairs","setTrainingPairs","useState","newPair","setNewPair","query","response","quality_score","isTraining","setIsTraining","trainingConfig","setTrainingConfig","epochs","batch_size","learning_rate","loadTrainingData","async","result","axios","get","data","training_pairs","err","console","error","useEffect","_jsxs","className","children","_jsx","type","value","onChange","e","_objectSpread","parseInt","target","min","max","parseFloat","step","placeholder","rows","toFixed","onClick","trim","post","coherence_score","sememes","length","alert","message","disabled","confirm","delete","map","pair","index","ResponseImprovement","_ref","currentResponse","onImprove","improvedResponse","setImprovedResponse","isImproving","setIsImproving","params","current_response","target_response","CognitionInterface","setQuery","setResponse","isProcessing","setIsProcessing","history","setHistory","metrics","setMetrics","setError","showTraining","setShowTraining","showImprovement","setShowImprovement","loadHistory","loadMetrics","formatTime","seconds","formatPercentage","_err$response","_err$response$data","detail","phase","toUpperCase","method","processing_time","output","coherence","dissonance","success","metadata","nodes_count","sememes_count","variants_count","improvementData","total_queries","recognition_rate","avg_coherence","avg_processing_time","memory_updates","deposited_patterns","slice","item","id","Home","showCognition","setShowCognition","log","testBackendConnection","ReactDOM","document","getElementById","render","React","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}